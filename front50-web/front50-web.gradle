/*
 * Copyright 2014 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'io.spinnaker.package'

ext {
  springConfigLocation = System.getProperty('spring.config.additional-location', "${System.getProperty('user.home')}/.spinnaker/".toString())
}

run {
  systemProperty('spring.config.additional-location', project.springConfigLocation)
}
mainClassName = 'com.netflix.spinnaker.front50.Main'

configurations.all {
  exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

dependencies {
  implementation project(":front50-core")
  implementation project(":front50-migrations")
  implementation "org.springframework.boot:spring-boot-starter-web"
  implementation "org.springframework.boot:spring-boot-starter-actuator"
  implementation "com.netflix.spinnaker.fiat:fiat-api:$fiatVersion"
  implementation "com.netflix.spinnaker.fiat:fiat-core:$fiatVersion"
  implementation "com.netflix.spinnaker.kork:kork-artifacts"
  implementation "com.netflix.spinnaker.kork:kork-web"
  implementation "com.netflix.spinnaker.kork:kork-stackdriver"
  implementation "com.netflix.spinnaker.kork:kork-exceptions"
  implementation "com.netflix.spinnaker.kork:kork-swagger"
  implementation "com.netflix.spinnaker.kork:kork-core"
  implementation "com.squareup.retrofit:converter-jackson"
  runtimeOnly "com.netflix.spinnaker.kork:kork-secrets-aws"
  runtimeOnly "com.netflix.spinnaker.kork:kork-secrets-gcp"

  testImplementation project(":front50-test")
  testImplementation project(":front50-s3")
  testImplementation "com.amazonaws:aws-java-sdk-s3"

  // Add each included cloud provider project as a runtime dependency
  gradle.includedProviderProjects.each {
    runtimeOnly project(it)
  }
}

test {
  environment "AWS_ACCESS_KEY_ID", "null"
  environment "AWS_SECRET_KEY", "null"
}
